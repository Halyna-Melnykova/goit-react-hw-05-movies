{"version":3,"file":"static/js/135.5e01cbf7.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '163c321dbb11d99503a707d857a1af3f',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getActors = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\n// export const getMovieByQuery = async query => {\n//   const { data } = await instance.get('search/movie', {\n//     query,\n//   });\n//   return data;\n// };\n\n// search\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '163c321dbb11d99503a707d857a1af3f';\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"info\":\"MovieDetails_info__qv2SI\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"genre\":\"MovieDetails_genre__+tTbx\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\nimport { getMovieInfo } from '../../api/movies';\n// import Button from 'components/Button/Button';\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  // const navigate = useNavigate();\n\n  const location = useLocation();\n  console.log(location.state);\n  const backLinkHref = location.state?.from ?? '/home';\n\n  useEffect(() => {\n    async function fetchMovieById() {\n      setLoading(true);\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n  // const goBack = () => navigate('/');\n  // const goBack = () => navigate(-1);\n\n  const isMovie = Object.keys(movie).length > 0;\n\n  const { poster_path, title, overview, genres, release_date, vote_average } =\n    movie;\n\n  const score = ((vote_average * 100) / 10).toFixed(0);\n  const year = release_date?.slice(0, 4);\n\n  return (\n    <main>\n      {loading && <p>Loading...</p>}\n      {error && <p>Data loading error</p>}\n      {/* {isMovie && <Button goBack={goBack} />} */}\n\n      {isMovie && (\n        <Link to={backLinkHref} className={s.link}>\n          Go back\n        </Link>\n      )}\n      {isMovie && (\n        <div className={s.wrapper}>\n          {poster_path && (\n            <img\n              className=\"image\"\n              src={`https://image.tmdb.org/t/p/original${poster_path}`}\n              alt=\"poster\"\n            />\n          )}\n          <div className={s.info}>\n            <h2>\n              {title} ({year})\n            </h2>\n            <p>User Score: {score}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul className={s.genres}>\n              {genres &&\n                genres.map(({ id, name }) => (\n                  <li className={s.genre} key={id}>\n                    {name}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <div className={s.addInfo}>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            {/* <Link to=\"cast\">Cast</Link> */}\n            <Link to=\"cast\" state={{ from: location.pathname }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.pathname }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","getMovieInfo","movieId","getActors","getReviews","getMovieByQuery","query","useState","movie","setMovie","loading","setLoading","error","setError","useParams","location","useLocation","console","log","state","backLinkHref","from","useEffect","fetchMovieById","isMovie","Object","keys","length","poster_path","title","overview","genres","release_date","score","vote_average","toFixed","year","slice","to","className","s","src","alt","map","id","name","pathname","Suspense","fallback"],"sourceRoot":""}